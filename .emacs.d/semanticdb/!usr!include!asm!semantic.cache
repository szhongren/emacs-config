;; Object asm/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "asm/"
  :tables (list 
   (semanticdb-table "socket.h"
    :major-mode 'c++-mode
    :tags 
        '( ("_ASM_SOCKET_H" variable (:constant-flag t) nil [290 303])
            ("cygwin/if.h" include (:system-flag t) nil [305 327])
            ("IOCPARM_MASK" variable (:constant-flag t) nil [337 349])
            ("IOC_VOID" variable (:constant-flag t) nil [414 422])
            ("IOC_OUT" variable (:constant-flag t) nil [474 481])
            ("IOC_IN" variable (:constant-flag t) nil [540 546])
            ("_IO" variable (:constant-flag t) nil [606 609])
            ("_IOR" variable (:constant-flag t) nil [650 654])
            ("_IOW" variable (:constant-flag t) nil [730 734])
            ("SIOCATMARK" variable (:constant-flag t) nil [810 820])
            ("FIONREAD" variable (:constant-flag t) nil [872 880])
            ("FIONBIO" variable (:constant-flag t) nil [941 948])
            ("REAL_FIONBIO" variable (:constant-flag t) nil [1013 1025])
            ("FIOASYNC" variable (:constant-flag t) nil [1094 1102])
            ("SIOCSHIWAT" variable (:constant-flag t) nil [1163 1173])
            ("SIOCGHIWAT" variable (:constant-flag t) nil [1231 1241])
            ("SIOCSLOWAT" variable (:constant-flag t) nil [1299 1309])
            ("SIOCGLOWAT" variable (:constant-flag t) nil [1366 1376])
            ("SIOCGIFCONF" variable (:constant-flag t) nil [1462 1473])
            ("SIOCGIFFLAGS" variable (:constant-flag t) nil [1534 1546])
            ("SIOCGIFADDR" variable (:constant-flag t) nil [1606 1617])
            ("SIOCGIFBRDADDR" variable (:constant-flag t) nil [1677 1691])
            ("SIOCGIFNETMASK" variable (:constant-flag t) nil [1757 1771])
            ("SIOCGIFHWADDR" variable (:constant-flag t) nil [1831 1844])
            ("SIOCGIFMETRIC" variable (:constant-flag t) nil [1902 1915])
            ("SIOCGIFMTU" variable (:constant-flag t) nil [1972 1982])
            ("SIOCGIFINDEX" variable (:constant-flag t) nil [2044 2056])
            ("SIOGIFINDEX" variable (:constant-flag t) nil [2116 2127])
            ("SIOCGIFFRNDLYNAM" variable (:constant-flag t) nil [2193 2209])
            ("SIOCGIFDSTADDR" variable (:constant-flag t) nil [2274 2288])
            ("SOL_SOCKET" variable (:constant-flag t) nil [2349 2359])
            ("SO_DEBUG" variable (:constant-flag t) nil [2421 2429])
            ("SO_ACCEPTCONN" variable (:constant-flag t) nil [2500 2513])
            ("SO_REUSEADDR" variable (:constant-flag t) nil [2570 2582])
            ("SO_KEEPALIVE" variable (:constant-flag t) nil [2642 2654])
            ("SO_DONTROUTE" variable (:constant-flag t) nil [2711 2723])
            ("SO_BROADCAST" variable (:constant-flag t) nil [2786 2798])
            ("SO_USELOOPBACK" variable (:constant-flag t) nil [2865 2879])
            ("SO_LINGER" variable (:constant-flag t) nil [2941 2950])
            ("SO_OOBINLINE" variable (:constant-flag t) nil [3019 3031])
            ("SO_DONTLINGER" variable (:constant-flag t) nil [3097 3110])
            ("SO_PEERCRED" variable (:constant-flag t) nil [3141 3152])
            ("SO_SNDBUF" variable (:constant-flag t) nil [3225 3234])
            ("SO_RCVBUF" variable (:constant-flag t) nil [3288 3297])
            ("SO_SNDLOWAT" variable (:constant-flag t) nil [3354 3365])
            ("SO_RCVLOWAT" variable (:constant-flag t) nil [3420 3431])
            ("SO_SNDTIMEO" variable (:constant-flag t) nil [3489 3500])
            ("SO_RCVTIMEO" variable (:constant-flag t) nil [3548 3559])
            ("SO_ERROR" variable (:constant-flag t) nil [3610 3618])
            ("SO_TYPE" variable (:constant-flag t) nil [3683 3690]))          
    :file "socket.h"
    :pointmax 3766
    :fsize 3765
    :lastmodtime '(21483 54109 0 0)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("_ASM_SOCKET_H")
          ("REAL_FIONBIO" . ((symbol "_IOW" 1030 . 1034) (semantic-list "('f', 126, u_long)" 1034 . 1052)))
          ("SIOCGIFFLAGS" . ((symbol "_IOW" 1550 . 1554) (semantic-list "('s', 101, struct ifreq)" 1554 . 1578)))
          ("SO_DONTROUTE" . ((number "0x0010" 2727 . 2733)))
          ("SIOCSLOWAT" . ((symbol "_IOW" 1311 . 1315) (semantic-list "('s',  2, u_long)" 1315 . 1332)))
          ("SIOCGIFNETMASK" . ((symbol "_IOW" 1773 . 1777) (semantic-list "('s', 104, struct ifreq)" 1777 . 1801)))
          ("SOL_SOCKET" . ((number "0xffff" 2365 . 2371)))
          ("SO_KEEPALIVE" . ((number "0x0008" 2658 . 2664)))
          ("SIOCGIFADDR" . ((symbol "_IOW" 1622 . 1626) (semantic-list "('s', 102, struct ifreq)" 1626 . 1650)))
          ("SIOCGIFMETRIC" . ((symbol "_IOW" 1918 . 1922) (semantic-list "('s', 106, struct ifreq)" 1922 . 1946)))
          ("SO_BROADCAST" . ((number "0x0020" 2802 . 2808)))
          ("SIOCGIFDSTADDR" . ((symbol "_IOW" 2290 . 2294) (semantic-list "('s', 110, struct ifreq)" 2294 . 2318)))
          ("SO_OOBINLINE" . ((number "0x0100" 3035 . 3041)))
          ("SO_DONTLINGER" . ((semantic-list "(u_int)" 3113 . 3120) (semantic-list "(~SO_LINGER)" 3120 . 3132)))
          ("SIOCATMARK" . ((symbol "_IOR" 822 . 826) (semantic-list "('s',  7, u_long)" 826 . 843)))
          ("SIOCGIFCONF" . ((symbol "_IOW" 1478 . 1482) (semantic-list "('s', 100, struct ifconf)" 1482 . 1507)))
          ("_IOR" (spp-arg-list ("x" "y" "t") 654 . 661) . ((semantic-list "(IOC_OUT|(((long)sizeof(t)&IOCPARM_MASK)<<16)|(x<<8)|y)" 666 . 721)))
          ("SIOCGHIWAT" . ((symbol "_IOR" 1243 . 1247) (semantic-list "('s',  1, u_long)" 1247 . 1264)))
          ("SO_SNDBUF" . ((number "0x1001" 3241 . 3247)))
          ("IOC_IN" . ((number "0x80000000" 556 . 566)))
          ("SIOGIFINDEX" . ((symbol "SIOCGIFINDEX" 2128 . 2140)))
          ("SO_PEERCRED" . ((number "0x0200" 3153 . 3159)))
          ("SO_RCVBUF" . ((number "0x1002" 3304 . 3310)))
          ("SO_SNDLOWAT" . ((number "0x1003" 3370 . 3376)))
          ("SO_SNDTIMEO" . ((number "0x1005" 3505 . 3511)))
          ("SO_ERROR" . ((number "0x1007" 3626 . 3632)))
          ("IOC_VOID" . ((number "0x20000000" 430 . 440)))
          ("FIOASYNC" . ((symbol "_IOW" 1106 . 1110) (semantic-list "('f', 125, u_long)" 1110 . 1128)))
          ("IOCPARM_MASK" . ((number "0x7f" 353 . 357)))
          ("_IO" (spp-arg-list ("x" "y") 609 . 614) . ((semantic-list "(IOC_VOID|(x<<8)|y)" 622 . 641)))
          ("SIOCSHIWAT" . ((symbol "_IOW" 1175 . 1179) (semantic-list "('s',  0, u_long)" 1179 . 1196)))
          ("SIOCGIFBRDADDR" . ((symbol "_IOW" 1693 . 1697) (semantic-list "('s', 103, struct ifreq)" 1697 . 1721)))
          ("SIOCGIFHWADDR" . ((symbol "_IOW" 1847 . 1851) (semantic-list "('s', 105, struct ifreq)" 1851 . 1875)))
          ("SIOCGIFFRNDLYNAM" . ((symbol "_IOW" 2210 . 2214) (semantic-list "('s', 109, struct ifreq)" 2214 . 2238)))
          ("SO_REUSEADDR" . ((number "0x0004" 2586 . 2592)))
          ("_IOW" (spp-arg-list ("x" "y" "t") 734 . 741) . ((semantic-list "(IOC_IN|(((long)sizeof(t)&IOCPARM_MASK)<<16)|(x<<8)|y)" 746 . 800)))
          ("FIONREAD" . ((symbol "_IOR" 884 . 888) (semantic-list "('f', 127, u_long)" 888 . 906)))
          ("FIONBIO" . ((number "0x8004667e" 949 . 959)))
          ("SIOCGLOWAT" . ((symbol "_IOR" 1378 . 1382) (semantic-list "('s',  3, u_long)" 1382 . 1399)))
          ("SO_DEBUG" . ((number "0x0001" 2437 . 2443)))
          ("SO_ACCEPTCONN" . ((number "0x0002" 2516 . 2522)))
          ("IOC_OUT" . ((number "0x40000000" 490 . 500)))
          ("SIOCGIFINDEX" . ((symbol "_IOW" 2060 . 2064) (semantic-list "('s', 108, struct ifreq)" 2064 . 2088)))
          ("SO_USELOOPBACK" . ((number "0x0040" 2881 . 2887)))
          ("SO_LINGER" . ((number "0x0080" 2957 . 2963)))
          ("SO_TYPE" . ((number "0x1008" 3699 . 3705)))
          ("SIOCGIFMTU" . ((symbol "_IOW" 1988 . 1992) (semantic-list "('s', 107, struct ifreq)" 1992 . 2016)))
          ("SO_RCVLOWAT" . ((number "0x1004" 3436 . 3442)))
          ("SO_RCVTIMEO" . ((number "0x1006" 3564 . 3570)))
          )

    )
   (semanticdb-table "byteorder.h"
    :major-mode 'c++-mode
    :tags 
        '( ("_I386_BYTEORDER_H" variable (:constant-flag t) nil [297 314])
            ("_ansi.h" include (:system-flag t) nil [316 334])
            ("stdint.h" include (:system-flag t) nil [335 354])
            ("bits/endian.h" include (:system-flag t) nil [355 379])
            ("__LITTLE_ENDIAN_BITFIELD" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [462 486])
            ("ntohl" function
               (:type ("uint32_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [517 526]))                  
                :typemodifiers ("extern" "\"C\"" "extern")
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [495 527])
            ("ntohs" function
               (:type ("uint16_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [550 559]))                  
                :typemodifiers ("extern" "\"C\"" "extern")
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [528 560])
            ("htonl" function
               (:type ("uint32_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [583 592]))                  
                :typemodifiers ("extern" "\"C\"" "extern")
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [561 593])
            ("htons" function
               (:type ("uint16_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [616 625]))                  
                :typemodifiers ("extern" "\"C\"" "extern")
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [594 626])
            ("__ntohl" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("uint32_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [662 671]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [645 672])
            ("__ntohs" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("uint16_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [707 716]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [690 717])
            ("__ntohl" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("uint32_t" type (:type "class") nil nil)
                :arguments 
                  ( ("x" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [753 764]))                  )
                (reparse-symbol extern-c-contents) [736 822])
            ("__constant_ntohl" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [832 848])
            ("__ntohs" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("uint16_t" type (:type "class") nil nil)
                :arguments 
                  ( ("x" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1083 1094]))                  )
                (reparse-symbol extern-c-contents) [1066 1181])
            ("__constant_ntohs" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1191 1207])
            ("__htonl" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1312 1319])
            ("__htons" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1342 1349])
            ("__constant_htonl" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1372 1388])
            ("__constant_htons" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1420 1436]))          
    :file "byteorder.h"
    :pointmax 1962
    :fsize 1961
    :lastmodtime '(21483 54109 0 0)
    :unmatched-syntax '((symbol 1049 . 1065) (symbol 719 . 735) (symbol 673 . 689) (symbol 628 . 644))
    :lexical-table 
        '(("__htons" (spp-arg-list ("x") 1349 . 1352) . ((symbol "__ntohs" 1353 . 1360) (semantic-list "(x)" 1360 . 1363)))
          ("__LITTLE_ENDIAN_BITFIELD")
          ("__constant_ntohs" (spp-arg-list ("x") 1207 . 1210) . ((semantic-list "((uint16_t)((((uint16_t)(x) & 0x00ff) << 8) | \\
		   (((uint16_t)(x) & 0xff00) >> 8)))" 1214 . 1300)))
          ("__constant_htons" (spp-arg-list ("x") 1436 . 1439) . ((symbol "__constant_ntohs" 1440 . 1456) (semantic-list "(x)" 1456 . 1459)))
          ("__htonl" (spp-arg-list ("x") 1319 . 1322) . ((symbol "__ntohl" 1323 . 1330) (semantic-list "(x)" 1330 . 1333)))
          ("_I386_BYTEORDER_H")
          ("__constant_ntohl" (spp-arg-list ("x") 848 . 851) . ((semantic-list "((uint32_t)((((uint32_t)(x) & 0x000000ffU) << 24) | \\
		   (((uint32_t)(x) & 0x0000ff00U) <<  8) | \\
		   (((uint32_t)(x) & 0x00ff0000U) >>  8) | \\
		   (((uint32_t)(x) & 0xff000000U) >> 24)))" 855 . 1047)))
          ("__constant_htonl" (spp-arg-list ("x") 1388 . 1391) . ((symbol "__constant_ntohl" 1392 . 1408) (semantic-list "(x)" 1408 . 1411)))
          )

    )
   )
  :file "!usr!include!asm!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
